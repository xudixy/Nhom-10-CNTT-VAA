{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","map":{"version":3,"names":["_extends","React","warnOnce","gridDimensionsSelector","useGridApiEventHandler","listViewStateInitializer","state","props","apiRef","listViewColumn","unstable_listColumn","computedWidth","getListColumnWidth","undefined","useGridListView","updateListColumnWidth","current","setState","prevInnerWidth","useRef","handleGridSizeChange","viewportInnerSize","width","useEffect","listColumn","unstable_listView"],"sources":["/Users/hoanggiakiet/Documents/EcommerceProject/front-end/admin-dashboard/node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,sBAAsB,QAAQ,wBAAwB;AAC/D,SAASC,sBAAsB,QAAQ,uCAAuC;AAC9E,OAAO,MAAMC,wBAAwB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,MAAM,KAAKR,QAAQ,CAAC,CAAC,CAAC,EAAEM,KAAK,EAAE;EACpFG,cAAc,EAAEF,KAAK,CAACG,mBAAmB,GAAGV,QAAQ,CAAC,CAAC,CAAC,EAAEO,KAAK,CAACG,mBAAmB,EAAE;IAClFC,aAAa,EAAEC,kBAAkB,CAACJ,MAAM;EAC1C,CAAC,CAAC,GAAGK;AACP,CAAC,CAAC;AACF,OAAO,SAASC,eAAeA,CAACN,MAAM,EAAED,KAAK,EAAE;EAC7C;AACF;AACA;EACE,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAClCP,MAAM,CAACQ,OAAO,CAACC,QAAQ,CAACX,KAAK,IAAI;MAC/B,IAAI,CAACA,KAAK,CAACG,cAAc,EAAE;QACzB,OAAOH,KAAK;MACd;MACA,OAAON,QAAQ,CAAC,CAAC,CAAC,EAAEM,KAAK,EAAE;QACzBG,cAAc,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAEM,KAAK,CAACG,cAAc,EAAE;UACjDE,aAAa,EAAEC,kBAAkB,CAACJ,MAAM;QAC1C,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,MAAMU,cAAc,GAAGjB,KAAK,CAACkB,MAAM,CAAC,IAAI,CAAC;EACzC,MAAMC,oBAAoB,GAAGC,iBAAiB,IAAI;IAChD,IAAIH,cAAc,CAACF,OAAO,KAAKK,iBAAiB,CAACC,KAAK,EAAE;MACtDJ,cAAc,CAACF,OAAO,GAAGK,iBAAiB,CAACC,KAAK;MAChDP,qBAAqB,CAAC,CAAC;IACzB;EACF,CAAC;EACDX,sBAAsB,CAACI,MAAM,EAAE,yBAAyB,EAAEY,oBAAoB,CAAC;EAC/EhB,sBAAsB,CAACI,MAAM,EAAE,6BAA6B,EAAEO,qBAAqB,CAAC;;EAEpF;AACF;AACA;EACEd,KAAK,CAACsB,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAGjB,KAAK,CAACG,mBAAmB;IAC5C,IAAIc,UAAU,EAAE;MACdhB,MAAM,CAACQ,OAAO,CAACC,QAAQ,CAACX,KAAK,IAAI;QAC/B,OAAON,QAAQ,CAAC,CAAC,CAAC,EAAEM,KAAK,EAAE;UACzBG,cAAc,EAAET,QAAQ,CAAC,CAAC,CAAC,EAAEwB,UAAU,EAAE;YACvCb,aAAa,EAAEC,kBAAkB,CAACJ,MAAM;UAC1C,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,MAAM,EAAED,KAAK,CAACG,mBAAmB,CAAC,CAAC;EACvCT,KAAK,CAACsB,SAAS,CAAC,MAAM;IACpB,IAAIhB,KAAK,CAACkB,iBAAiB,IAAI,CAAClB,KAAK,CAACG,mBAAmB,EAAE;MACzDR,QAAQ,CAAC,CAAC,sFAAsF,EAAE,sJAAsJ,EAAE,oEAAoE,CAAC,CAAC;IAClU;EACF,CAAC,EAAE,CAACK,KAAK,CAACkB,iBAAiB,EAAElB,KAAK,CAACG,mBAAmB,CAAC,CAAC;AAC1D;AACA,SAASE,kBAAkBA,CAACJ,MAAM,EAAE;EAClC,OAAOL,sBAAsB,CAACK,MAAM,CAACQ,OAAO,CAACV,KAAK,CAAC,CAACe,iBAAiB,CAACC,KAAK;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}