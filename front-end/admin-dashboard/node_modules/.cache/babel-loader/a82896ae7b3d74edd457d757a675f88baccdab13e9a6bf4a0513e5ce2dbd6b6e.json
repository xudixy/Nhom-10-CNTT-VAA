{"ast":null,"code":"var _jsxFileName = \"/Users/hoanggiakiet/Documents/EcommerceProject/front-end/admin-dashboard/src/pages/OrdersPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport OrderList from '../components/orders/OrderList';\nimport OrderForm from '../components/orders/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const [formData, setFormData] = useState({\n    _id: '',\n    shippingInfo: {\n      fullName: '',\n      email: '',\n      phone: '',\n      address: ''\n    },\n    totalAmount: 0,\n    status: '',\n    paymentMethod: '',\n    items: []\n  });\n  const [open, setOpen] = useState(false);\n  const fetchOrders = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      const response = await axios.get('http://localhost:5000/api/orders/admin/all', {\n        headers\n      });\n      const formattedOrders = response.data.orders.map(order => ({\n        _id: order._id,\n        user: order.user,\n        items: order.items.map(item => ({\n          productId: item.productId._id,\n          name: item.name,\n          quantity: item.quantity,\n          price: item.price,\n          size: Array.isArray(item.size) ? item.size : [item.size]\n        })),\n        shippingInfo: {\n          fullName: order.shippingInfo.fullName,\n          email: order.shippingInfo.email,\n          phone: order.shippingInfo.phone,\n          address: order.shippingInfo.address\n        },\n        totalAmount: order.totalAmount,\n        status: order.status,\n        paymentMethod: order.paymentMethod,\n        paymentStatus: order.paymentStatus,\n        createdAt: order.createdAt,\n        updatedAt: order.updatedAt\n      }));\n      setOrders(formattedOrders);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      setError('Không thể tải danh sách đơn hàng');\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const validStatuses = ['pending', 'processing', 'completed', 'cancelled']; // Updated valid statuses\n  const handleConfirm = async id => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n\n      // Check if 'completed' is a valid status\n      if (!validStatuses.includes('completed')) {\n        throw new Error('Invalid status value: completed');\n      }\n      const response = await axios.put(`http://localhost:5000/api/orders/${id}/status`, {\n        status: 'completed',\n        // Use 'completed' as the status\n        updatedAt: new Date().toISOString() // Add timestamp\n      }, {\n        headers\n      });\n      if (response.data) {\n        setSnackbar({\n          open: true,\n          message: 'Xác nhận đơn hàng thành công',\n          severity: 'success'\n        });\n        fetchOrders();\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error confirming order:', error.response || error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Có lỗi xảy ra khi xác nhận đơn hàng. Vui lòng thử lại sau.';\n      setSnackbar({\n        open: true,\n        message: errorMessage,\n        severity: 'error'\n      });\n    }\n  };\n  const handleEditOrder = order => {\n    setFormData({\n      _id: order._id,\n      shippingInfo: {\n        fullName: order.shippingInfo.fullName,\n        email: order.shippingInfo.email,\n        phone: order.shippingInfo.phone,\n        address: order.shippingInfo.address\n      },\n      totalAmount: order.totalAmount,\n      status: order.status,\n      paymentMethod: order.paymentMethod,\n      items: order.items\n    });\n    setOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(OrderList, {\n      orders: orders,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderForm, {\n      open: open,\n      onClose: () => setOpen(false),\n      formData: formData,\n      setFormData: setFormData,\n      onSubmit: handleEditOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error || snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: snackbar.severity || 'error',\n        onClose: () => setError(''),\n        children: error || snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersPage, \"oHvVL8rcblZP7NIoPF/uhK6l554=\");\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["useState","useEffect","Box","Snackbar","Alert","axios","OrderList","OrderForm","jsxDEV","_jsxDEV","OrdersPage","_s","orders","setOrders","error","setError","snackbar","setSnackbar","open","message","severity","formData","setFormData","_id","shippingInfo","fullName","email","phone","address","totalAmount","status","paymentMethod","items","setOpen","fetchOrders","headers","Authorization","localStorage","getItem","response","get","formattedOrders","data","map","order","user","item","productId","name","quantity","price","size","Array","isArray","paymentStatus","createdAt","updatedAt","console","validStatuses","handleConfirm","id","includes","Error","put","Date","toISOString","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","handleEditOrder","children","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onSubmit","autoHideDuration","_c","$RefreshReg$"],"sources":["/Users/hoanggiakiet/Documents/EcommerceProject/front-end/admin-dashboard/src/pages/OrdersPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Box, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport OrderList from '../components/orders/OrderList';\nimport OrderForm from '../components/orders/OrderForm';\n\nconst OrdersPage = () => {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [formData, setFormData] = useState({\n    _id: '',\n    shippingInfo: {\n      fullName: '',\n      email: '',\n      phone: '',\n      address: '',\n    },\n    totalAmount: 0,\n    status: '',\n    paymentMethod: '',\n    items: []\n  });\n  const [open, setOpen] = useState(false);\n\n    const fetchOrders = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      const response = await axios.get('http://localhost:5000/api/orders/admin/all', { headers });\n      \n      const formattedOrders = response.data.orders.map(order => ({\n        _id: order._id,\n        user: order.user,\n        items: order.items.map(item => ({\n          productId: item.productId._id,\n          name: item.name,\n          quantity: item.quantity,\n          price: item.price,\n          size: Array.isArray(item.size) ? item.size : [item.size]\n        })),\n        shippingInfo: {\n          fullName: order.shippingInfo.fullName,\n          email: order.shippingInfo.email,\n          phone: order.shippingInfo.phone,\n          address: order.shippingInfo.address,\n        },\n        totalAmount: order.totalAmount,\n        status: order.status,\n        paymentMethod: order.paymentMethod,\n        paymentStatus: order.paymentStatus,\n        createdAt: order.createdAt,\n        updatedAt: order.updatedAt\n      }));\n\n      setOrders(formattedOrders);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      setError('Không thể tải danh sách đơn hàng');\n    }\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const validStatuses = ['pending', 'processing', 'completed', 'cancelled']; // Updated valid statuses\n  const handleConfirm = async (id) => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n\n      // Check if 'completed' is a valid status\n      if (!validStatuses.includes('completed')) {\n        throw new Error('Invalid status value: completed');\n      }\n\n      const response = await axios.put(\n        `http://localhost:5000/api/orders/${id}/status`, \n        { \n          status: 'completed', // Use 'completed' as the status\n          updatedAt: new Date().toISOString() // Add timestamp\n        }, \n        { headers }\n      );\n      \n      if (response.data) {\n        setSnackbar({ \n          open: true, \n          message: 'Xác nhận đơn hàng thành công', \n          severity: 'success' \n        });\n        fetchOrders();\n      }\n    } catch (error) {\n      console.error('Error confirming order:', error.response || error);\n      const errorMessage = error.response?.data?.message \n        || error.response?.data?.error \n        || 'Có lỗi xảy ra khi xác nhận đơn hàng. Vui lòng thử lại sau.';\n      setSnackbar({ \n        open: true, \n        message: errorMessage, \n        severity: 'error' \n      });\n    }\n  };\n\nconst handleEditOrder = (order) => {\n  setFormData({\n    _id: order._id,\n    shippingInfo: {\n      fullName: order.shippingInfo.fullName,\n      email: order.shippingInfo.email,\n      phone: order.shippingInfo.phone,\n      address: order.shippingInfo.address,\n    },\n    totalAmount: order.totalAmount,\n    status: order.status,\n    paymentMethod: order.paymentMethod,\n    items: order.items\n  });\n  setOpen(true);\n};\n\n  return (\n    <Box>\n      <OrderList orders={orders} onConfirm={handleConfirm} />\n      <OrderForm open={open} onClose={() => setOpen(false)} formData={formData} setFormData={setFormData} onSubmit={handleEditOrder} />\n      <Snackbar open={!!error || snackbar.open} autoHideDuration={6000} onClose={() => setError('')}>\n        <Alert severity={snackbar.severity || 'error'} onClose={() => setError('')}>\n          {error || snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default OrdersPage;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,SAAS,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAU,CAAC,CAAC;EAC3F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IACvCuB,GAAG,EAAE,EAAE;IACPC,YAAY,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IACDC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACd,IAAI,EAAEe,OAAO,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAErC,MAAMkC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,4CAA4C,EAAE;QAAEL;MAAQ,CAAC,CAAC;MAE3F,MAAMM,eAAe,GAAGF,QAAQ,CAACG,IAAI,CAAC9B,MAAM,CAAC+B,GAAG,CAACC,KAAK,KAAK;QACzDrB,GAAG,EAAEqB,KAAK,CAACrB,GAAG;QACdsB,IAAI,EAAED,KAAK,CAACC,IAAI;QAChBb,KAAK,EAAEY,KAAK,CAACZ,KAAK,CAACW,GAAG,CAACG,IAAI,KAAK;UAC9BC,SAAS,EAAED,IAAI,CAACC,SAAS,CAACxB,GAAG;UAC7ByB,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;UACvBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;UACjBC,IAAI,EAAEC,KAAK,CAACC,OAAO,CAACP,IAAI,CAACK,IAAI,CAAC,GAAGL,IAAI,CAACK,IAAI,GAAG,CAACL,IAAI,CAACK,IAAI;QACzD,CAAC,CAAC,CAAC;QACH3B,YAAY,EAAE;UACZC,QAAQ,EAAEmB,KAAK,CAACpB,YAAY,CAACC,QAAQ;UACrCC,KAAK,EAAEkB,KAAK,CAACpB,YAAY,CAACE,KAAK;UAC/BC,KAAK,EAAEiB,KAAK,CAACpB,YAAY,CAACG,KAAK;UAC/BC,OAAO,EAAEgB,KAAK,CAACpB,YAAY,CAACI;QAC9B,CAAC;QACDC,WAAW,EAAEe,KAAK,CAACf,WAAW;QAC9BC,MAAM,EAAEc,KAAK,CAACd,MAAM;QACpBC,aAAa,EAAEa,KAAK,CAACb,aAAa;QAClCuB,aAAa,EAAEV,KAAK,CAACU,aAAa;QAClCC,SAAS,EAAEX,KAAK,CAACW,SAAS;QAC1BC,SAAS,EAAEZ,KAAK,CAACY;MACnB,CAAC,CAAC,CAAC;MAEH3C,SAAS,CAAC4B,eAAe,CAAC;IAC5B,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACd2C,OAAO,CAAC3C,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdiC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwB,aAAa,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;EAC3E,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;IAClC,IAAI;MACF,MAAMzB,OAAO,GAAG;QACdC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD,CAAC;;MAED;MACA,IAAI,CAACoB,aAAa,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;QACxC,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MAEA,MAAMvB,QAAQ,GAAG,MAAMlC,KAAK,CAAC0D,GAAG,CAC9B,oCAAoCH,EAAE,SAAS,EAC/C;QACE9B,MAAM,EAAE,WAAW;QAAE;QACrB0B,SAAS,EAAE,IAAIQ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;MACtC,CAAC,EACD;QAAE9B;MAAQ,CACZ,CAAC;MAED,IAAII,QAAQ,CAACG,IAAI,EAAE;QACjBzB,WAAW,CAAC;UACVC,IAAI,EAAE,IAAI;UACVC,OAAO,EAAE,8BAA8B;UACvCC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFc,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MAAA,IAAAoD,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdZ,OAAO,CAAC3C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACyB,QAAQ,IAAIzB,KAAK,CAAC;MACjE,MAAMwD,YAAY,GAAG,EAAAJ,eAAA,GAAApD,KAAK,CAACyB,QAAQ,cAAA2B,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBxB,IAAI,cAAAyB,oBAAA,uBAApBA,oBAAA,CAAsBhD,OAAO,OAAAiD,gBAAA,GAC7CtD,KAAK,CAACyB,QAAQ,cAAA6B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB1B,IAAI,cAAA2B,qBAAA,uBAApBA,qBAAA,CAAsBvD,KAAK,KAC3B,4DAA4D;MACjEG,WAAW,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAEmD,YAAY;QACrBlD,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAEH,MAAMmD,eAAe,GAAI3B,KAAK,IAAK;IACjCtB,WAAW,CAAC;MACVC,GAAG,EAAEqB,KAAK,CAACrB,GAAG;MACdC,YAAY,EAAE;QACZC,QAAQ,EAAEmB,KAAK,CAACpB,YAAY,CAACC,QAAQ;QACrCC,KAAK,EAAEkB,KAAK,CAACpB,YAAY,CAACE,KAAK;QAC/BC,KAAK,EAAEiB,KAAK,CAACpB,YAAY,CAACG,KAAK;QAC/BC,OAAO,EAAEgB,KAAK,CAACpB,YAAY,CAACI;MAC9B,CAAC;MACDC,WAAW,EAAEe,KAAK,CAACf,WAAW;MAC9BC,MAAM,EAAEc,KAAK,CAACd,MAAM;MACpBC,aAAa,EAAEa,KAAK,CAACb,aAAa;MAClCC,KAAK,EAAEY,KAAK,CAACZ;IACf,CAAC,CAAC;IACFC,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEC,oBACExB,OAAA,CAACP,GAAG;IAAAsE,QAAA,gBACF/D,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAAC6D,SAAS,EAAEd;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDpE,OAAA,CAACF,SAAS;MAACW,IAAI,EAAEA,IAAK;MAAC4D,OAAO,EAAEA,CAAA,KAAM7C,OAAO,CAAC,KAAK,CAAE;MAACZ,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACyD,QAAQ,EAAER;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjIpE,OAAA,CAACN,QAAQ;MAACe,IAAI,EAAE,CAAC,CAACJ,KAAK,IAAIE,QAAQ,CAACE,IAAK;MAAC8D,gBAAgB,EAAE,IAAK;MAACF,OAAO,EAAEA,CAAA,KAAM/D,QAAQ,CAAC,EAAE,CAAE;MAAAyD,QAAA,eAC5F/D,OAAA,CAACL,KAAK;QAACgB,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ,IAAI,OAAQ;QAAC0D,OAAO,EAAEA,CAAA,KAAM/D,QAAQ,CAAC,EAAE,CAAE;QAAAyD,QAAA,EACxE1D,KAAK,IAAIE,QAAQ,CAACG;MAAO;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAClE,EAAA,CAnIID,UAAU;AAAAuE,EAAA,GAAVvE,UAAU;AAqIhB,eAAeA,UAAU;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}