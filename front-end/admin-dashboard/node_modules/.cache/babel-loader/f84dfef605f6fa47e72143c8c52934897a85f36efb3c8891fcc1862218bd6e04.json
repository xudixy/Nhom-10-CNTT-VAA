{"ast":null,"code":"var _jsxFileName = \"/Users/hoanggiakiet/Documents/EcommerceProject/front-end/admin-dashboard/src/pages/OrdersPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport OrderList from '../components/orders/OrderList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const userId = 'someUserId'; // Replace with the actual user ID you want to fetch orders for\n\n  const fetchOrders = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      const response = await axios.get(`http://localhost:5000/api/admin/user-orders/${userId}`, {\n        headers\n      });\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      setError('Không thể tải danh sách đơn hàng');\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const handleConfirm = async id => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      await axios.put(`http://localhost:5000/api/orders/${id}/confirm`, {}, {\n        headers\n      });\n      setSnackbar({\n        open: true,\n        message: 'Xác nhận đơn hàng thành công',\n        severity: 'success'\n      });\n      fetchOrders();\n    } catch (error) {\n      console.error('Error confirming order:', error);\n      setError('Có lỗi xảy ra khi xác nhận đơn hàng');\n      setSnackbar({\n        open: true,\n        message: 'Có lỗi xảy ra khi xác nhận đơn hàng',\n        severity: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(OrderList, {\n      orders: orders,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!error || snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setError(''),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: snackbar.severity || 'error',\n        onClose: () => setError(''),\n        children: error || snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersPage, \"QBSSSpwOgLus51dor6A/j/CRg0I=\");\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["useState","useEffect","Box","Snackbar","Alert","axios","OrderList","jsxDEV","_jsxDEV","OrdersPage","_s","orders","setOrders","error","setError","snackbar","setSnackbar","open","message","severity","userId","fetchOrders","headers","Authorization","localStorage","getItem","response","get","data","console","handleConfirm","id","put","children","onConfirm","fileName","_jsxFileName","lineNumber","columnNumber","autoHideDuration","onClose","_c","$RefreshReg$"],"sources":["/Users/hoanggiakiet/Documents/EcommerceProject/front-end/admin-dashboard/src/pages/OrdersPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Box, Snackbar, Alert } from '@mui/material';\nimport axios from 'axios';\nimport OrderList from '../components/orders/OrderList';\n\nconst OrdersPage = () => {\n  const [orders, setOrders] = useState([]);\n  const [error, setError] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const userId = 'someUserId'; // Replace with the actual user ID you want to fetch orders for\n\n  const fetchOrders = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      const response = await axios.get(`http://localhost:5000/api/admin/user-orders/${userId}`, { headers });\n      setOrders(response.data);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      setError('Không thể tải danh sách đơn hàng');\n    }\n  };\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n\n  const handleConfirm = async (id) => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      };\n      await axios.put(`http://localhost:5000/api/orders/${id}/confirm`, {}, { headers });\n      setSnackbar({ open: true, message: 'Xác nhận đơn hàng thành công', severity: 'success' });\n      fetchOrders();\n    } catch (error) {\n      console.error('Error confirming order:', error);\n      setError('Có lỗi xảy ra khi xác nhận đơn hàng');\n      setSnackbar({ open: true, message: 'Có lỗi xảy ra khi xác nhận đơn hàng', severity: 'error' });\n    }\n  };\n\n  return (\n    <Box>\n      <OrderList \n        orders={orders}\n        onConfirm={handleConfirm}\n      />\n      <Snackbar \n        open={!!error || snackbar.open} \n        autoHideDuration={6000} \n        onClose={() => setError('')}\n      >\n        <Alert severity={snackbar.severity || 'error'} onClose={() => setError('')}>\n          {error || snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default OrdersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}